# -*- coding: utf-8 -*-
"""predict_nextnumber_using_simpleRNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aamc3dQHcfhGGgiF-2lII7kdZyeex7UG
"""

import numpy as np
from tensorflow.keras.layers import SimpleRNN, Dense
from tensorflow.keras.models import Sequential
import matplotlib.pyplot as plt

sequence=np.array([i for i in range(1,101)])
window_size=3
x=[]
y=[]
for i in range(len(sequence)-window_size):
    x.append(sequence[i:i+window_size])
    y.append(sequence[i+window_size])
x=np.array(x)
y=np.array(y)

x=x.reshape(x.shape[0],x.shape[1],1)

model=Sequential()
model.add(SimpleRNN(50,activation='relu',input_shape=(3,1)))
model.add(Dense(1))
model.compile(optimizer='adam',loss='mse')

model.fit(x, y, epochs=600, verbose=0)

input_sequence = np.array([8, 9, 10])
input_sequence = input_sequence.reshape((1, window_size, 1))
prediction = model.predict(input_sequence)
print(f"Prediction for the next number in the sequence is: {prediction[0][0]}")

predictions=model.predict(x)
plt.plot(y,label='True value')
plt.plot(predictions,label='Predicted value')
plt.legend()
plt.show()